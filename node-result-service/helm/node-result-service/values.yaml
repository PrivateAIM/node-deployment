results:

    HUB__API_BASE_URL: https://privateaim.net/core
    HUB__AUTH_BASE_URL: https://privateaim.net/auth
    HUB__AUTH_USERNAME: #TODO
    HUB__AUTH_PASSWORD: dev-harbor.personalhealthtrain.de

    MINIO__BUCKET: flame
    MINIO__REGION: us-east-1
    MINIO__USE_SSL: false

    OIDC__CERTS_URL: http://keycloak-service:8080/realms/flame/protocol/openid-connect/certs
    OIDC__CLIENT_ID_CLAIM_NAME: azp


minio:
    # All possible values can be found at https://github.com/minio/minio/blob/master/helm/minio/values.yaml

    ## Provide a name in place of minio for `app:` labels
    nameOverride: ""

    ## Provide a name to substitute for the full names of resources
    fullnameOverride: ""

    ## set kubernetes cluster domain where minio is running
    clusterDomain: cluster.local

    ## Set default rootUser, rootPassword
    ## rootUser and rootPassword is generated when not set
    ## Distributed MinIO ref: https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html
    ##
    rootUser: ""
    rootPassword: ""

    ## Use existing Secret that store following variables:
    ##
    ## | Chart var             | .data.<key> in Secret    |
    ## |:----------------------|:-------------------------|
    ## | rootUser              | rootUser                 |
    ## | rootPassword          | rootPassword             |
    ##
    ## All mentioned variables will be ignored in values file.
    ## .data.rootUser and .data.rootPassword are mandatory,
    ## others depend on enabled status of corresponding sections.
    existingSecret: ""

    ## Path where PV would be mounted on the MinIO Pod
    mountPath: "/mnt/data"

    ## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2024-01-16T16-07-38Z
      pullPolicy: IfNotPresent

    imagePullSecrets: []
    ## Update strategy for Deployments
    deploymentUpdate:
      type: RollingUpdate
      maxUnavailable: 0
      maxSurge: 100%

    ## Update strategy for StatefulSets
    statefulSetUpdate:
      updateStrategy: RollingUpdate

    persistence:
      enabled: true
      annotations: {}

      ## A manually managed Persistent Volume and Claim
      ## Requires persistence.enabled: true
      ## If defined, PVC must be created manually before volume will be bound
      existingClaim: ""

      ## minio data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      ## Storage class of PV to bind. By default it looks for standard storage class.
      ## If the PV uses a different storage class, specify that here.
      storageClass: ""
      volumeName: ""
      accessMode: ReadWriteOnce
      size: 500Gi