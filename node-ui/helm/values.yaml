## For defining ingress specific metadata
ingress:
  domain: localhost

env: development
url: http://localhost:3000

## Keycloak related information
idp:
  ## @param idp.debug If true, the clientId and clientSecret will use pre-defined values
  ## The clientSecret will be defined using the "static" k8s secret key
  debug: false
  ## @param idp.clientId Keycloak client ID for this service
  clientId: node-ui
  ## @param idp.clientSecret Keycloak client secret. Ignored if `idp.existingSecret` is provided
  ## If not defined and no existingSecret provided, a random string is generated
  clientSecret: ""
  ## @param idp.existingSecret Existing k8s secret containing Keycloak secret for this client
  ## idp.existingSecretKey should also be defined for custom k8s secret. Defaults to hub-adapter-kc-secret
  existingSecret: ""
  ## @param idp.existingSecretKey Key where the Keycloak secret is being stored inside the existing k8s secret
  existingSecretKey: ""
  ## @param idp.realm Keycloak realm that the client exists in
  realm: flame
  ## @param idp.host URL to keycloak service
  ## Will be inferred using the Release.Name if not defined
  host: ""

## Downstream node services
node:
  ## @param node.adapter Hub adapter endpoint
  adapter: ""
