## Global variables
global:
  node:
    ingress:
      ## @param global.node.ingress.enabled Toggle whether ingress should be enabled
      enabled: false
      ## @param global.node.ingress.enabled Host name to be assigned to the Node UI (/) and Hub Adapter API (/api)
      hostname: ""

env: production

## For defining ingress specific metadata
ingress:
  ## @param ingress.enabled Enable ingress record generation for the Node UI
  ##
  enabled: false
  ## @param ingress.hostname Default host for the ingress record (evaluated as template)
  ##
  hostname: ""
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.path Default file path for the ingress hostname
  ##
  path: "/"

## Keycloak related information
idp:
  ## @param idp.debug If true, the clientId and clientSecret will use pre-defined values
  ## The clientSecret will be defined using the "static" k8s secret key
  debug: false
  ## @param idp.clientId Keycloak client ID for this service
  clientId: node-ui
  ## @param idp.clientSecret Keycloak client secret. Ignored if `idp.existingSecret` is provided
  ## If not defined and no existingSecret provided, a random string is generated
  clientSecret: ""
  ## @param idp.existingSecret Existing k8s secret containing Keycloak secret for this client
  ## idp.existingSecretKey should also be defined for custom k8s secret. Defaults to hub-adapter-kc-secret
  existingSecret: ""
  ## @param idp.existingSecretKey Key where the Keycloak secret is being stored inside the existing k8s secret
  existingSecretKey: ""
  ## @param idp.realm Keycloak realm that the client exists in
  realm: flame
  ## @param idp.host URL to keycloak service
  ## Will be inferred using the Release.Name if not defined
  host: ""
  ## @param idp.service Service name of keycloak
  ## Will be inferred using the Release.Name if not defined
  service: ""

## Downstream node services
node:
  ## @param node.adapter Hub adapter endpoint.
  ## This will overwrite the global.node.ingress.host generated path if provided!
  adapter: ""
