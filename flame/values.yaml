# kong values
kong:
  image:
    repository: kong
    tag: "3.6"

  env:
    prefix: /kong_prefix/
    database: postgres
    # The default values for admin_listen include both ipv4 and ipv6 - if cluster does not support ipv6, it should be defined (minikube does not support ipv6)
    # admin_listen: "127.0.0.1:8001"

  admin:
    enabled: true
    type: ClusterIP
    http:
      enabled: true
      servicePort: 80
    tls:
      enabled: false

  manager:
    enabled: false

  portal:
    enabled: false

  portalapi:
    enabled: false

  proxy:
    enabled: true
    type: ClusterIP  
    http:
      enabled: true
      servicePort: 80
    tls:
      enabled: false

  ingressController:
    enabled: false

  # Sub-chart
  postgresql:
    enabled: true
    nameOverride: kong-postgresql
    auth:
      database: kong
      username: kong
      password: kong
      postgresPassword: supersecretpassword

# minio values
minio:
  mode: standalone
  accessKey: minio
  secretKey: minio123
  persistence:
    enabled: true
  
# keycloak values
keycloak:
  auth:
    adminUser: admin
    adminPassword: admin
  postgresql:
    enabled: true
    nameOverride: keycloak-postgresql
    auth:
      database: keycloak
      username: keycloak
      password: keycloak
      postgresPassword: supersecretpassword

# hub-api-adapter Values
flame-hub-adapter:
  api:
    version: 0.1.0
    domain: localhost
  env:
      API_CLIENT_ID: api-client
      IDP_REALM: flame
      IDP_URL: http://keycloak-service:8080
      RESULTS_SERVICE_URL: http://results-service:5000
      KONG_ADMIN_SERVICE_URL: http://flame-node-kong-admin:80
      PODORC_SERVICE_URL: http://po-service:8000
      HUB_SERVICE_URL: https://api.privateaim.net
      HUB_AUTH_SERVICE_URL: https://auth.privateaim.net
      HUB_USERNAME: thehubusername
      HUB_PASSWORD: thehubpassword

flame-node-pod-orchestration:
  api:
    version: 0.1.0
    domain: localhost
  env:
    NODE_NAME: flame_test
    NODE_KEY: /home/david/PycharmProjects/node-pod-orchestration/k8/helm/node-pod-orchestration/values.template.yaml
    NODE_KEY_PW:

    HARBOR_URL: dev-harbor.personalhealthtrain.de
    HARBOR_PW: test
    HARBOR_USER: test

    KEYCLOAK_URL: http://keycloak-service
    KEYCLOAK_REALM: flame

    RESULT_CLIENT_ID: service1
    RESULT_CLIENT_SECRET: abc

    DB_HOST: postgresql-service
    DB_PORT: 5432
    DB_USER: admin
    DB_PASSWORD: admin


    POSTGRES_DB: postgres_db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    
flame-node-message-broker:
  # Uncomment, if you want to use a specific storage class.
  # Otherwise, the default one will be used.
  # common:
  #   storageClassName: yourStorageClassToBeUsed
  broker:
    AUTH_JWKS_URL: http://keycloak-service:8080/realms/flame/protocol/openid-connect/certs
    HUB_BASE_URL: https://api.privateaim.net/
    HUB_AUTH_BASE_URL: https://auth.privateaim.net/
    HUB_AUTH_ROBOT_ID: yourRobotId
    HUB_AUTH_ROBOT_SECRET: yourRobotSecret
    
# blaze values
blaze:
  service:
    type: ClusterIP
    port: 80
  dataPopulatorJob:
    enabled: true
    env:
      SYNTHEA_N_PATIENTS: 10
      TIMEOUT: 1
      FHIR_BASE_URL: http://flame-node-blaze:80/fhir
results-service:
  env:
    HUB_USERNAME: foobar
    HUB_PASSWORD: sup3r_s3cr3t
    MINIO_ACCESS_KEY: admin
    MINIO_SECRET_KEY: s3cr3t_p4ssw0rd
    MINIO_USE_SSL: false
    MINIO_BUCKET: flame
    OIDC_CERTS_URL: http://flame-node-keycloak-service:8080/realms/flame/protocol/openid-connect/certs
