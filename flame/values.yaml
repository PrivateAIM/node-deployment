# kong values
kong:
  image:
    repository: kong
    tag: "3.6"

  env:
    prefix: /kong_prefix/
    database: postgres
    # The default values for admin_listen include both ipv4 and ipv6 - if cluster does not support ipv6, it should be defined (minikube does not support ipv6)
    # admin_listen: "127.0.0.1:8001"

  admin:
    enabled: true
    type: ClusterIP
    http:
      enabled: true
      servicePort: 80
    tls:
      enabled: false

  manager:
    enabled: false

  portal:
    enabled: false

  portalapi:
    enabled: false

  proxy:
    enabled: true
    type: ClusterIP  
    http:
      enabled: true
      servicePort: 80
    tls:
      enabled: false

  ingressController:
    enabled: false

  # Sub-chart
  postgresql:
    enabled: true
    nameOverride: kong-postgresql
    auth:
      database: kong
      username: kong
      password: kong
      postgresPassword: supersecretpassword

# minio values
minio:
  mode: standalone
  accessKey: minio
  secretKey: minio123
  persistence:
    enabled: true
  
# keycloak values
keycloak:
  auth:
    ## @param auth.adminUser Keycloak administrator user
    ##
    adminUser: admin
    ## @param auth.adminPassword Keycloak administrator password for the new user
    ##
    adminPassword: ""
    ## @param auth.existingSecret Existing secret containing Keycloak admin password
    ##
    existingSecret: "kc-password-secret"
    ## @param auth.passwordSecretKey Key where the Keycloak admin password is being stored inside the existing secret.
    ##
    passwordSecretKey: "kc-admin-password"

  ## The existingSecret must have both "postgres-password" and "password" as a key
  ## An issue is open for this and should be fixed soon: https://github.com/bitnami/charts/issues/25232
  ## Current bitnami/keycloak helm chart used is 24.0.2
  postgresql:
    enabled: true
    auth:
      postgresPassword: ""  # Not needed since secret is provided
      username: keycloak  # custom user
      password: keycloak  # custom user pwd
      database: keycloak
      existingSecret: "kc-password-secret"  # admin password, requires "password" key in secret
    architecture: standalone

  keycloakConfigCli:
    ## @param keycloakConfigCli.enabled Whether to enable keycloak-config-cli job
    ## Must be set to true to apply settings below
    enabled: true
    ## @param keycloakConfigCli.configuration keycloak-config-cli realms configuration
    ## NOTE: nil keys will be considered files to import locally
    ## Example:
    ## configuration:
    ##   realm1.json: |
    ##     {
    ##       "realm": "realm1",
    ##       "clients": []
    ##     }
    ##   files/realm2.yaml:
    ##   realm3.yaml: |
    ##     realm: realm3
    ##     clients: []
    ##
    configuration:
      flame.json: |
        {
          "realm": "flame",
          "clients": [ {
              "clientId": "hub-adapter",
              "name": "Node Hub Adapter Gateway API",
              "clientAuthenticatorType": "client-secret",
              "secret" : "pTvLrBKuy0vxruvUprwsXpEtw84dDN9C",
              "standardFlowEnabled" : true,
              "implicitFlowEnabled" : false,
              "directAccessGrantsEnabled" : true,
              "serviceAccountsEnabled" : true,
              "authorizationServicesEnabled" : true,
              "publicClient" : false,
              "enabled": true
            } ],
          "users": [ {
            "username" : "flameuser",
            "firstName" : "Johnny",
            "lastName" : "Storm",
            "email" : "foobar@gmail.com",
            "emailVerified" : true,
            "enabled" : true,
            "credentials" : [ {
              "type" : "password",
              "userLabel" : "My password",
              "secretData" : "{\"value\":\"AcmFvt1RyPVxJXASu8d66p6nsCV5uwuvPAQ5Qdo1aqJoFaxc7vxPoJpwDCT8xCRR/SANHsyRRpUGfJGZhBKI0w==\",\"salt\":\"K06PBP69IiB0QWWsiaqSxQ==\",\"additionalParameters\":{}}",
              "credentialData" : "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
              } ]
            } ]
        }

# hub-api-adapter Values
flame-hub-adapter:
  api:
    version: 0.1.0
    domain: localhost
  env:
      API_CLIENT_ID: api-client
      IDP_REALM: flame
      IDP_URL: http://keycloak-service:8080
      RESULTS_SERVICE_URL: http://results-service:5000
      KONG_ADMIN_SERVICE_URL: http://flame-node-kong-admin:80
      PODORC_SERVICE_URL: http://po-service:8000
      HUB_SERVICE_URL: https://api.privateaim.net
      HUB_AUTH_SERVICE_URL: https://auth.privateaim.net
      HUB_USERNAME: thehubusername
      HUB_PASSWORD: thehubpassword

flame-node-pod-orchestration:
  api:
    version: 0.1.0
    domain: localhost
  env:
    NODE_NAME: flame_test
    NODE_KEY: /home/david/PycharmProjects/node-pod-orchestration/k8/helm/node-pod-orchestration/values.template.yaml
    NODE_KEY_PW:

    HARBOR_URL: dev-harbor.personalhealthtrain.de
    HARBOR_PW: test
    HARBOR_USER: test

    KEYCLOAK_URL: http://keycloak-service
    KEYCLOAK_REALM: flame

    RESULT_CLIENT_ID: service1
    RESULT_CLIENT_SECRET: abc

    DB_HOST: postgresql-service
    DB_PORT: 5432
    DB_USER: admin
    DB_PASSWORD: admin


    POSTGRES_DB: postgres_db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres

# blaze values
blaze:
  service:
    type: ClusterIP
    port: 80
  dataPopulatorJob:
    enabled: true
    env:
      SYNTHEA_N_PATIENTS: 10
      FHIR_BASE_URL: http://flame-node-blaze:80/fhir

